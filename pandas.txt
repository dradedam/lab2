1

!pip install pandas


2

import pandas as pd # Библиотека Pandas для работы с табличными данными


3

# Чтение данных из файла 'titanic.csv'
# Используйте метод pd.read_csv()
df = pd.read_csv('titanic.csv')


4

# Вывод первых 5 строк данных
# Используйте метод .head()
df.head()


5

df.info()
df.shape # Размерность таблицы


6

# Проверка на наличие NaN в DataFrame
# Используйте метод .isna()
df.isna()


7

# Заполнение NaN определенным значением (например, нулем)
# Используйте метод .fillna()
dl = df
dl.fillna(0)
dl


8

# Удаление строк, содержащих NaN
# Используйте метод .dropna()
df = df.dropna(0)
df


9

# Выбор столбца по метке
# Используйте синтаксис DataFrame['название_столбца']
df1 = df['Name']
df1

# Выбор нескольких столбцов
# Используйте синтаксис DataFrame[['столбец_1', 'столбец_2']]
df2 = df[['Name', 'Sex']]
df2

# Выбор строк по индексу
# Используйте метод .loc[]
df3 = df.loc[[1]]
df3

# Выбор строк и столбцов по условию
# Используя логические операции, выберите мужчин старше 30
df4 = df[[df['Age'] > 30] and df['Sex'] == 'male']

df4




10

# Сортировка данных по столбцу 'столбец_1' по возрастанию
# Используйте метод .sort_values()
sorted = df.sort_values(by='PassengerId', ascending=True)
sorted



11

# Найдите долю выживших среди всех PClass
# Используйте метод .groupby()
alive = df
alive[['Pclass','Survived']].groupby(['Pclass']).mean()



12

ds = pd.read_csv('titanic.csv') #считываем данные
ds.isna() # Проверка на NaN
ds.fillna(0) #заменяем NaN на нули
ds.head(10) # Вывод 10 строк